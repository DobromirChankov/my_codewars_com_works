# Split Strings 

# Complete the solution so that it splits the string into pairs of two characters. 
# If the string contains an odd number of characters then it should replace the missing second character of the final pair with an underscore ('_').

# Examples:

# * 'abc' =>  ['ab', 'c_']
# * 'abcdef' => ['ab', 'cd', 'ef']
# --------------------------------------------------------
# My Solution:

def solution(s):
    res_list =[]
    if len(s) == 0:
        return res_list
    elif len(s) == 1:
        return [s[0] + '_']
    elif len(s) > 1:
        for i in range(0, len(s), 2):
            if i+1 < len(s):
                res_list.append(s[i] + s[i+1])
            else:    
                res_list.append(s[i] + '_')
        return res_list     
